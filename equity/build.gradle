plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'eclipse'
}

group = 'za1975'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	 all*.exclude module : 'spring-boot-starter-logging'
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "2020.0.0-M6")
	
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation  'org.springframework.boot:spring-boot-starter-hateoas'
	implementation  'org.springframework.boot:spring-boot-starter-web'
	implementation  'org.springframework.boot:spring-boot-starter-log4j2'
	implementation  'com.lmax:disruptor:3.4.2'

	implementation  'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation  'org.springframework.data:spring-data-rest-hal-explorer'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'	
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	compile group:  'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.1'

	compileOnly 	'org.projectlombok:lombok'
	runtimeOnly 	'org.postgresql:postgresql'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
